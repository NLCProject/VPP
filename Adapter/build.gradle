buildscript {
    ext {
        ktorVersion = '2.3.0'
        junitVersion = '5.9.0'
        mySqlVersion = '8.0.30'
        log4jVersion = '2.19.0'
        kotlinVersion = '1.7.22'
        springBootVersion = '2.7.4'
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath("mysql:mysql-connector-java:${mySqlVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id("org.jlleitschuh.gradle.ktlint") version "11.0.0"
    id("io.ktor.plugin") version "${ktorVersion}"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.vpp.adapter'

test {
    useJUnitPlatform()
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation project(':Utils')
    implementation project(':Storage')
    implementation("mysql:mysql-connector-java:${mySqlVersion}")
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    implementation("org.apache.logging.log4j:log4j-api:${log4jVersion}")
    implementation("org.apache.logging.log4j:log4j-to-slf4j:${log4jVersion}")
    implementation group: 'org.json', name: 'json', version: '20210307'
    implementation group: 'com.h2database', name: 'h2', version: '2.1.214'
    implementation group: 'org.springframework', name: 'spring-context-support', version: '5.3.22'
    implementation("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.13.4'
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-mustache:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation group: 'org.jetbrains', name: 'annotations', version: '23.0.0'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.6.4', ext: 'pom'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-serialization-runtime', version: '1.0-M1-1.4.0-rc'
    implementation("org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}")
    testImplementation("org.mockito.kotlin:mockito-kotlin:4.1.0")
    testImplementation group: 'org.reflections', name: 'reflections', version: '0.10.2'
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5:${kotlinVersion}")
    testImplementation("org.junit.vintage:junit-vintage-engine:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}